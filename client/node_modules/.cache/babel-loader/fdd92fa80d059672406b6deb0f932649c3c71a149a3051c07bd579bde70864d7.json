{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\Downloads\\\\frontend-assignment\\\\Frontend-Assignment\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // Import the custom CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [symbol, setSymbol] = useState('');\n  const [date, setDate] = useState('');\n  const [tradeData, setTradeData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [prevSymbol, setPrevSymbol] = useState(''); // Store the previous stock symbol\n  const [prevDate, setPrevDate] = useState(''); // Store the previous date\n  const [dataFetched, setDataFetched] = useState(false); // Track whether data has been fetched\n\n  // Get tomorrow's date in YYYY-MM-DD format\n  const tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  const tomorrowDate = tomorrow.toISOString().split('T')[0];\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:5000/api/fetchStockData', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          symbol,\n          date\n        })\n      });\n      if (!response.ok) {\n        const errorResponse = await response.json();\n        setError(errorResponse.error || 'Something went wrong.');\n        setTradeData(null);\n        setDataFetched(false); // Reset the dataFetched state on error\n      } else {\n        const data = await response.json();\n        setTradeData(data);\n        setError(null);\n        setDataFetched(true); // Set dataFetched to true after successful API call\n      }\n    } catch (error) {\n      setError('Something went wrong.');\n      setTradeData(null);\n      setDataFetched(false); // Reset the dataFetched state on error\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSymbolChange = e => {\n    setSymbol(e.target.value);\n    setDataFetched(false); // Reset dataFetched state when the symbol changes\n    clearTimeout(symbolChangeTimeout);\n    const symbolChangeTimeout = setTimeout(() => {\n      setTradeData(null); // Clear previous output after a brief delay\n      setError(null); // Clear any errors after a brief delay\n    }, 1000);\n  };\n  const handleDateChange = e => {\n    setDate(e.target.value);\n    setDataFetched(false); // Reset dataFetched state when the date changes\n    clearTimeout(dateChangeTimeout);\n    const dateChangeTimeout = setTimeout(() => {\n      setTradeData(null); // Clear previous output after a brief delay\n      setError(null); // Clear any errors after a brief delay\n    }, 1000);\n  };\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (symbol !== prevSymbol || date !== prevDate) {\n      // Only update trade data if either the stock symbol or date has changed\n      setPrevSymbol(symbol);\n      setPrevDate(date);\n      handleSubmit(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Trade Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), dataFetched && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Data is already fetched below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Stock Symbol:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          value: symbol,\n          onChange: handleSymbolChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"date\",\n          value: date,\n          onChange: handleDateChange,\n          max: tomorrowDate // Set the maximum date to tomorrow\n          ,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Fetching...' : 'Fetch Data'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this), tradeData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trade-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Trade Data for \", prevSymbol, \" on \", date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Open: \", tradeData.open]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"High: \", tradeData.high]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Low: \", tradeData.low]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Close: \", tradeData.close]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Volume: \", tradeData.volume]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rorgHI29ZNiAH509r3IE4rHpn20=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","symbol","setSymbol","date","setDate","tradeData","setTradeData","loading","setLoading","error","setError","prevSymbol","setPrevSymbol","prevDate","setPrevDate","dataFetched","setDataFetched","tomorrow","Date","getDate","tomorrowDate","toISOString","split","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorResponse","json","data","handleSymbolChange","target","value","clearTimeout","symbolChangeTimeout","setTimeout","handleDateChange","dateChangeTimeout","handleFormSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","max","disabled","open","high","low","close","volume","_c","$RefreshReg$"],"sources":["C:/Users/ankit/Downloads/frontend-assignment/Frontend-Assignment/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css'; // Import the custom CSS file for styling\r\n\r\nconst App = () => {\r\n  const [symbol, setSymbol] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [tradeData, setTradeData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [prevSymbol, setPrevSymbol] = useState(''); // Store the previous stock symbol\r\n  const [prevDate, setPrevDate] = useState(''); // Store the previous date\r\n  const [dataFetched, setDataFetched] = useState(false); // Track whether data has been fetched\r\n\r\n  // Get tomorrow's date in YYYY-MM-DD format\r\n  const tomorrow = new Date();\r\n  tomorrow.setDate(tomorrow.getDate() + 1);\r\n  const tomorrowDate = tomorrow.toISOString().split('T')[0];\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/fetchStockData', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ symbol, date }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorResponse = await response.json();\r\n        setError(errorResponse.error || 'Something went wrong.');\r\n        setTradeData(null);\r\n        setDataFetched(false); // Reset the dataFetched state on error\r\n      } else {\r\n        const data = await response.json();\r\n        setTradeData(data);\r\n        setError(null);\r\n        setDataFetched(true); // Set dataFetched to true after successful API call\r\n      }\r\n    } catch (error) {\r\n      setError('Something went wrong.');\r\n      setTradeData(null);\r\n      setDataFetched(false); // Reset the dataFetched state on error\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSymbolChange = (e) => {\r\n    setSymbol(e.target.value);\r\n    setDataFetched(false); // Reset dataFetched state when the symbol changes\r\n    clearTimeout(symbolChangeTimeout);\r\n    const symbolChangeTimeout = setTimeout(() => {\r\n      setTradeData(null); // Clear previous output after a brief delay\r\n      setError(null); // Clear any errors after a brief delay\r\n    }, 1000);\r\n  };\r\n\r\n  const handleDateChange = (e) => {\r\n    setDate(e.target.value);\r\n    setDataFetched(false); // Reset dataFetched state when the date changes\r\n    clearTimeout(dateChangeTimeout);\r\n    const dateChangeTimeout = setTimeout(() => {\r\n      setTradeData(null); // Clear previous output after a brief delay\r\n      setError(null); // Clear any errors after a brief delay\r\n    }, 1000);\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (symbol !== prevSymbol || date !== prevDate) {\r\n      // Only update trade data if either the stock symbol or date has changed\r\n      setPrevSymbol(symbol);\r\n      setPrevDate(date);\r\n      handleSubmit(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">Trade Statistics</h1>\r\n      {dataFetched && (\r\n        <div className=\"message\">\r\n          <p>Data is already fetched below</p>\r\n        </div>\r\n      )}\r\n      <form className=\"form\" onSubmit={handleFormSubmit}>\r\n        <div className=\"input-group\">\r\n          <label className=\"label\">Stock Symbol:</label>\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            value={symbol}\r\n            onChange={handleSymbolChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label className=\"label\">Date:</label>\r\n          <input\r\n            className=\"input\"\r\n            type=\"date\"\r\n            value={date}\r\n            onChange={handleDateChange}\r\n            max={tomorrowDate} // Set the maximum date to tomorrow\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"submit-button\" type=\"submit\" disabled={loading}>\r\n          {loading ? 'Fetching...' : 'Fetch Data'}\r\n        </button>\r\n      </form>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {tradeData && (\r\n        <div className=\"trade-data\">\r\n          <h2>Trade Data for {prevSymbol} on {date}</h2>\r\n          <p>Open: {tradeData.open}</p>\r\n          <p>High: {tradeData.high}</p>\r\n          <p>Low: {tradeData.low}</p>\r\n          <p>Close: {tradeData.close}</p>\r\n          <p>Volume: {tradeData.volume}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}