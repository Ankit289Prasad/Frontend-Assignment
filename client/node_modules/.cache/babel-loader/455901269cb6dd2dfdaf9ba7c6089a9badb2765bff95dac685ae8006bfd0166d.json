{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\Downloads\\\\frontend-assignment\\\\Frontend-Assignment\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // Import the custom CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [symbol, setSymbol] = useState('');\n  const [date, setDate] = useState('');\n  const [tradeData, setTradeData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [prevSymbol, setPrevSymbol] = useState('');\n  const [prevDate, setPrevDate] = useState('');\n\n  // Get tomorrow's date in YYYY-MM-DD format\n  const tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  const tomorrowDate = tomorrow.toISOString().split('T')[0];\n\n  // Function to get the key for local storage based on symbol and date\n  const getLocalStorageKey = (symbol, date) => `tradeData_${symbol}_${date}`;\n\n  // Function to fetch trade data from API\n  const fetchTradeData = async (symbol, date) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:5000/api/fetchStockData', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          symbol,\n          date\n        })\n      });\n      if (!response.ok) {\n        const errorResponse = await response.json();\n        setError(errorResponse.error || 'Something went wrong.');\n        setTradeData(null);\n      } else {\n        const data = await response.json();\n        setTradeData(data);\n        setError(null);\n        // Save the data to local storage\n        localStorage.setItem(getLocalStorageKey(symbol, date), JSON.stringify(data));\n      }\n    } catch (error) {\n      setError('Something went wrong.');\n      setTradeData(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to check if data for a given symbol and date is available in local storage\n  const checkLocalStorage = (symbol, date) => {\n    const tradeDataFromLocalStorage = localStorage.getItem(getLocalStorageKey(symbol, date));\n    if (tradeDataFromLocalStorage) {\n      setTradeData(JSON.parse(tradeDataFromLocalStorage));\n    }\n  };\n  useEffect(() => {\n    // Check local storage on initial render\n    checkLocalStorage(symbol, date);\n  }, [symbol, date]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (symbol !== prevSymbol || date !== prevDate) {\n      // Only update trade data if either the stock symbol or date has changed\n      setPrevSymbol(symbol);\n      setPrevDate(date);\n      fetchTradeData(symbol, date);\n    } else {\n      // Show notification if data is already fetched for the same input\n      setError('Data is already fetched below');\n      setTimeout(() => setError(null), 2000);\n    }\n  };\n  const handleSymbolChange = e => {\n    setSymbol(e.target.value);\n    setTradeData(null); // Clear previous result\n    setError(null); // Clear any errors\n  };\n\n  const handleDateChange = e => {\n    setDate(e.target.value);\n    setTradeData(null); // Clear previous result\n    setError(null); // Clear any errors\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Trade Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this), tradeData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trade-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Trade Data for \", symbol, \" on \", date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Open\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Volume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: tradeData.open\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: tradeData.high\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: tradeData.low\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: tradeData.close\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: tradeData.volume\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"+zt9XQI15+gRGACbH/6Pf7G/rZc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","symbol","setSymbol","date","setDate","tradeData","setTradeData","loading","setLoading","error","setError","prevSymbol","setPrevSymbol","prevDate","setPrevDate","tomorrow","Date","getDate","tomorrowDate","toISOString","split","getLocalStorageKey","fetchTradeData","response","fetch","method","headers","body","JSON","stringify","ok","errorResponse","json","data","localStorage","setItem","checkLocalStorage","tradeDataFromLocalStorage","getItem","parse","handleSubmit","e","preventDefault","setTimeout","handleSymbolChange","target","value","handleDateChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","open","high","low","close","volume","_c","$RefreshReg$"],"sources":["C:/Users/ankit/Downloads/frontend-assignment/Frontend-Assignment/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css'; // Import the custom CSS file for styling\r\n\r\nconst App = () => {\r\n  const [symbol, setSymbol] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [tradeData, setTradeData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [prevSymbol, setPrevSymbol] = useState('');\r\n  const [prevDate, setPrevDate] = useState('');\r\n\r\n  // Get tomorrow's date in YYYY-MM-DD format\r\n  const tomorrow = new Date();\r\n  tomorrow.setDate(tomorrow.getDate() + 1);\r\n  const tomorrowDate = tomorrow.toISOString().split('T')[0];\r\n\r\n  // Function to get the key for local storage based on symbol and date\r\n  const getLocalStorageKey = (symbol, date) => `tradeData_${symbol}_${date}`;\r\n\r\n  // Function to fetch trade data from API\r\n  const fetchTradeData = async (symbol, date) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/fetchStockData', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ symbol, date }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorResponse = await response.json();\r\n        setError(errorResponse.error || 'Something went wrong.');\r\n        setTradeData(null);\r\n      } else {\r\n        const data = await response.json();\r\n        setTradeData(data);\r\n        setError(null);\r\n        // Save the data to local storage\r\n        localStorage.setItem(getLocalStorageKey(symbol, date), JSON.stringify(data));\r\n      }\r\n    } catch (error) {\r\n      setError('Something went wrong.');\r\n      setTradeData(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to check if data for a given symbol and date is available in local storage\r\n  const checkLocalStorage = (symbol, date) => {\r\n    const tradeDataFromLocalStorage = localStorage.getItem(getLocalStorageKey(symbol, date));\r\n    if (tradeDataFromLocalStorage) {\r\n      setTradeData(JSON.parse(tradeDataFromLocalStorage));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check local storage on initial render\r\n    checkLocalStorage(symbol, date);\r\n  }, [symbol, date]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (symbol !== prevSymbol || date !== prevDate) {\r\n      // Only update trade data if either the stock symbol or date has changed\r\n      setPrevSymbol(symbol);\r\n      setPrevDate(date);\r\n      fetchTradeData(symbol, date);\r\n    } else {\r\n      // Show notification if data is already fetched for the same input\r\n      setError('Data is already fetched below');\r\n      setTimeout(() => setError(null), 2000);\r\n    }\r\n  };\r\n\r\n  const handleSymbolChange = (e) => {\r\n    setSymbol(e.target.value);\r\n    setTradeData(null); // Clear previous result\r\n    setError(null); // Clear any errors\r\n  };\r\n\r\n  const handleDateChange = (e) => {\r\n    setDate(e.target.value);\r\n    setTradeData(null); // Clear previous result\r\n    setError(null); // Clear any errors\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">Trade Statistics</h1>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        {/* ... (Existing code) */}\r\n      </form>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {tradeData && (\r\n        <div className=\"trade-data\">\r\n          <h2>Trade Data for {symbol} on {date}</h2>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Open</th>\r\n                <th>High</th>\r\n                <th>Low</th>\r\n                <th>Close</th>\r\n                <th>Volume</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>{tradeData.open}</td>\r\n                <td>{tradeData.high}</td>\r\n                <td>{tradeData.low}</td>\r\n                <td>{tradeData.close}</td>\r\n                <td>{tradeData.volume}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}