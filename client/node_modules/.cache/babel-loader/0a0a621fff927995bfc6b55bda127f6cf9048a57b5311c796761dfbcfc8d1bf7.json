{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\Downloads\\\\frontend-assignment\\\\Frontend-Assignment\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // Import the custom CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [symbol, setSymbol] = useState('');\n  const [date, setDate] = useState('');\n  const [tradeData, setTradeData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Get tomorrow's date in YYYY-MM-DD format\n  const tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  const tomorrowDate = tomorrow.toISOString().split('T')[0];\n\n  // Function to get the key for local storage based on symbol and date\n  const getLocalStorageKey = (symbol, date) => `tradeData_${symbol}_${date}`;\n\n  // Function to fetch trade data from API\n  const fetchTradeData = async (symbol, date) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:5000/api/fetchStockData', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          symbol,\n          date\n        })\n      });\n      if (!response.ok) {\n        const errorResponse = await response.json();\n        setError(errorResponse.error || 'Something went wrong.');\n        setTradeData(null);\n      } else {\n        const data = await response.json();\n        setTradeData(data);\n        setError(null);\n        // Save the data to local storage\n        localStorage.setItem(getLocalStorageKey(symbol, date), JSON.stringify(data));\n      }\n    } catch (error) {\n      setError('Something went wrong.');\n      setTradeData(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to check if data for a given symbol and date is available in local storage\n  const checkLocalStorage = (symbol, date) => {\n    const tradeDataFromLocalStorage = localStorage.getItem(getLocalStorageKey(symbol, date));\n    if (tradeDataFromLocalStorage) {\n      setTradeData(JSON.parse(tradeDataFromLocalStorage));\n    }\n  };\n  useEffect(() => {\n    // Check local storage on initial render\n    checkLocalStorage(symbol, date);\n  }, [symbol, date]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchTradeData(symbol, date);\n  };\n  const handleSymbolChange = e => {\n    setSymbol(e.target.value);\n    setTradeData(null); // Clear previous result\n    setError(null); // Clear any errors\n  };\n\n  const handleDateChange = e => {\n    setDate(e.target.value);\n    setTradeData(null); // Clear previous result\n    setError(null); // Clear any errors\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Trade Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Stock Symbol:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          value: symbol,\n          onChange: handleSymbolChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"date\",\n          value: date,\n          onChange: handleDateChange,\n          max: tomorrowDate // Set the maximum date to tomorrow\n          ,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Fetching...' : 'Fetch Data'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this), tradeData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trade-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Trade Data for \", symbol, \" on \", date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Open: \", tradeData.open]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"High: \", tradeData.high]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Low: \", tradeData.low]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Close: \", tradeData.close]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Volume: \", tradeData.volume]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"B1fdlw6iQqmRdkPp+c0U06x6A44=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","symbol","setSymbol","date","setDate","tradeData","setTradeData","loading","setLoading","error","setError","tomorrow","Date","getDate","tomorrowDate","toISOString","split","getLocalStorageKey","fetchTradeData","response","fetch","method","headers","body","JSON","stringify","ok","errorResponse","json","data","localStorage","setItem","checkLocalStorage","tradeDataFromLocalStorage","getItem","parse","handleSubmit","e","preventDefault","handleSymbolChange","target","value","handleDateChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","max","disabled","open","high","low","close","volume","_c","$RefreshReg$"],"sources":["C:/Users/ankit/Downloads/frontend-assignment/Frontend-Assignment/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css'; // Import the custom CSS file for styling\r\n\r\nconst App = () => {\r\n  const [symbol, setSymbol] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [tradeData, setTradeData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Get tomorrow's date in YYYY-MM-DD format\r\n  const tomorrow = new Date();\r\n  tomorrow.setDate(tomorrow.getDate() + 1);\r\n  const tomorrowDate = tomorrow.toISOString().split('T')[0];\r\n\r\n  // Function to get the key for local storage based on symbol and date\r\n  const getLocalStorageKey = (symbol, date) => `tradeData_${symbol}_${date}`;\r\n\r\n  // Function to fetch trade data from API\r\n  const fetchTradeData = async (symbol, date) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/fetchStockData', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ symbol, date }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorResponse = await response.json();\r\n        setError(errorResponse.error || 'Something went wrong.');\r\n        setTradeData(null);\r\n      } else {\r\n        const data = await response.json();\r\n        setTradeData(data);\r\n        setError(null);\r\n        // Save the data to local storage\r\n        localStorage.setItem(getLocalStorageKey(symbol, date), JSON.stringify(data));\r\n      }\r\n    } catch (error) {\r\n      setError('Something went wrong.');\r\n      setTradeData(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to check if data for a given symbol and date is available in local storage\r\n  const checkLocalStorage = (symbol, date) => {\r\n    const tradeDataFromLocalStorage = localStorage.getItem(getLocalStorageKey(symbol, date));\r\n    if (tradeDataFromLocalStorage) {\r\n      setTradeData(JSON.parse(tradeDataFromLocalStorage));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check local storage on initial render\r\n    checkLocalStorage(symbol, date);\r\n  }, [symbol, date]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetchTradeData(symbol, date);\r\n  };\r\n\r\n  const handleSymbolChange = (e) => {\r\n    setSymbol(e.target.value);\r\n    setTradeData(null); // Clear previous result\r\n    setError(null); // Clear any errors\r\n  };\r\n\r\n  const handleDateChange = (e) => {\r\n    setDate(e.target.value);\r\n    setTradeData(null); // Clear previous result\r\n    setError(null); // Clear any errors\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">Trade Statistics</h1>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <label className=\"label\">Stock Symbol:</label>\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            value={symbol}\r\n            onChange={handleSymbolChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label className=\"label\">Date:</label>\r\n          <input\r\n            className=\"input\"\r\n            type=\"date\"\r\n            value={date}\r\n            onChange={handleDateChange}\r\n            max={tomorrowDate} // Set the maximum date to tomorrow\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"submit-button\" type=\"submit\" disabled={loading}>\r\n          {loading ? 'Fetching...' : 'Fetch Data'}\r\n        </button>\r\n      </form>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {tradeData && (\r\n        <div className=\"trade-data\">\r\n          <h2>Trade Data for {symbol} on {date}</h2>\r\n          <p>Open: {tradeData.open}</p>\r\n          <p>High: {tradeData.high}</p>\r\n          <p>Low: {tradeData.low}</p>\r\n          <p>Close: {tradeData.close}</p>\r\n          <p>Volume: {tradeData.volume}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}